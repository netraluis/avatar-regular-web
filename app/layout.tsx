'use client';
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import Header from "./component/header";
import { GlobalProvider } from "./component/context/globalContext";
import { useEffect, useRef, useState, } from "react";

const inter = Inter({ subsets: ["latin"] });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };



export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const [show, setShow] = useState(false);

  function useViewportHeight() {
    useEffect(() => {
      function setViewportHeight() {
        const viewportHeight = window.innerHeight;
        document.documentElement.style.setProperty('--viewport-height', `${viewportHeight}px`);
      }
      setShow(true)
      setViewportHeight();
  
      window.addEventListener('resize', setViewportHeight);
  
      return () => window.removeEventListener('resize', setViewportHeight);
    }, []);
  }

  useViewportHeight();

  const finalDelContenidoRef = useRef<any>(null);

  useEffect(() => {
    // Mueve el scroll al final del contenedor
    finalDelContenidoRef.current?.scrollIntoView({ behavior: "smooth" });
  });
  return (
    <html lang="en">
      <GlobalProvider>
         <body className={inter.className}>
          {show && <div className=" bg-white text-black">
            <div className="flex flex-col h-vh">
              <Header />
              <div className="flex-grow overflow-auto h-full">{children}<div ref={finalDelContenidoRef} /></div>
            </div>
          </div>}
        </body>
      </GlobalProvider>
    </html>
  );
}
